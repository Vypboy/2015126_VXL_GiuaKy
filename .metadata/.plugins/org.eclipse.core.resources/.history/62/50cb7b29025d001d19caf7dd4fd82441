#include "button.h"
#include "main.h"

//add more case if you have more buttons
int ReadButton(int i){
	switch(i){
		case 0://button RESET
			return HAL_GPIO_ReadPin(Button1_GPIO_Port, Button1_Pin);
		case 1://button INC
			return HAL_GPIO_ReadPin(Button2_GPIO_Port, Button2_Pin);
		case 2://button DEC
			return HAL_GPIO_ReadPin(Button3_GPIO_Port, Button3_Pin);
		//case3:......
		default:
			break;
	}
	return 0;
}

int button_flag[N0_OF_BUTTONS];

int KeyReg0[N0_OF_BUTTONS];
int KeyReg1[N0_OF_BUTTONS];
int KeyReg2[N0_OF_BUTTONS];
int KeyReg3[N0_OF_BUTTONS];
int TimeForKeyPress[N0_OF_BUTTONS];

void initKey(){
	for(int i = 0; i < N0_OF_BUTTONS ; i++) {
		button_flag[i]= 0;

		KeyReg0[i]= NORMAL_STATE;
		KeyReg1[i]= NORMAL_STATE;
		KeyReg2[i]= NORMAL_STATE;
		KeyReg3[i]= NORMAL_STATE;
		TimeForKeyPress[i]= 300;
	}
}

void subKeyProcess(int i){
	button_flag[i]=1;
}


int isButtonPressed(int i){
	if(button_flag[i]==1){
		button_flag[i]=0;
		return 1;
	}
	return 0;
}


int isButtonLongPressed(int i){
	if(button_flag[i]==2){
		button_flag[i]=0;
		return 1;
	}
	return 0;
}

//int count=0;
//int isButtonKeepPressed(int i){
//	//count = 100 la trong 100 vòng lặp 10ms(1s) ta lun nhan giu button
//	// nhung do trong qua trinh chay co the sai sot nen dk ta dat count>=90
//	if(count>=99){
//		count=0;
//		return 1;
//	}
//
//	if(button_flag[i]==1)
//		count++;
//	else count=0;
//	return 0;
//}




void getKeyInput(){
	for(int i = 0; i < N0_OF_BUTTONS ; i++) {
		KeyReg0[i]= KeyReg1[i];
		KeyReg1[i]= KeyReg2[i];
		KeyReg2[i]= ReadButton(i);
		if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
			if (KeyReg3[i] != KeyReg2[i]){
			  KeyReg3[i] = KeyReg2[i];
			  if (KeyReg2[i] == PRESSED_STATE){
				  TimeForKeyPress[i] = 300;
				  //TODO
				  subKeyProcess(i);
			  }
			} else {
				TimeForKeyPress[i]--;

//				if (TimeForKeyPress[i] == 0){
//					//TODO
//					KeyReg3[i]= NORMAL_STATE;
//				}


				if (TimeForKeyPress[i] == 0){
					if (KeyReg3[i] == NORMAL_STATE){
						button_flag[i] = 0;
						TimeForKeyPress[i] = 300;
					}
					if (KeyReg3[i] == PRESSED_STATE){
						button_flag[i] = 2;
						TimeForKeyPress[i] = 100;
					}
					//
				}
			}
		}
	}
}








////////////////////////////////////////////


//
//int isButtonHolded(int index){
//	if (button_flag[index] == 2){
//		button_flag[index] = 0;
//		return 1;
//	}
//	return 0;
//}
//void getKeyInput(){
//	for (int i = 0; i < N0_OF_BUTTONS; i++){
//		KeyReg0[i] = KeyReg1[i];
//		KeyReg1[i] = KeyReg2[i];
//		if(i == 0)
//			KeyReg2[i] = HAL_GPIO_ReadPin(RESET_GPIO_Port, RESET_Pin);
//		if(i == 1)
//			KeyReg2[i] = HAL_GPIO_ReadPin(INC_GPIO_Port, INC_Pin);
//		if(i == 2)
//			KeyReg2[i] = HAL_GPIO_ReadPin(DEC_GPIO_Port,DEC_Pin);
//		if ((KeyReg0[i] == KeyReg1[i]) && (KeyReg1[i] == KeyReg2[i])){
//			if (KeyReg3[i] != KeyReg2[i]){
//				KeyReg3[i] = KeyReg2[i];
//				if (KeyReg3[i] == PRESSED_STATE){
//					button_flag[i] = 1;
//					TimerForKeyPress[i] = 300;
//					flag = 1;
//					setTimer3(10000);
//				}
//			}
//			else{
//				TimerForKeyPress[i]--;
//				if (KeyReg3[i] == NORMAL_STATE){
//					button_flag[i] = -1;
//				}
//				if (TimerForKeyPress[i] == 0){
//					if (KeyReg3[i] == PRESSED_STATE){
//						button_flag[i] = 2;
//						TimerForKeyPress[i] = 300;
//						flag = 1;
//						setTimer3(10000);
//					}
//				}
//			}
//		}
//	}
//}

